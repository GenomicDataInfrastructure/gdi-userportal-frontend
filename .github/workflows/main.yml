# SPDX-FileCopyrightText: 2024 PNED G.I.E.
# SPDX-FileContributor: Stichting Health-RI
#
# SPDX-License-Identifier: Apache-2.0

name: Publish and Deploy main

on:
  workflow_run:
    workflows: ["Run Tests"]
    branches: [main]
    types:
      - completed

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/genomicdatainfrastructure/gdi-userportal-frontend
  AZURE_WEBAPP_NAME: catalogue-test
  REPOSITORY_URL: ${{ github.server_url }}/${{ github.repository }}
  GITHUB_SHA: ${{ github.sha }}
  GITHUB_REF_NAME: ${{ github.ref_name }}
  BUILD_DATE: ""

jobs:
  ort:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - uses: oss-review-toolkit/ort-ci-github-action@7f2382032d9f34ce0e6eaed0e0d6875da83a4343 # v1
        with:
          allow-dynamic-versions: "true"
          fail-on: "issues"
          run: "cache-dependencies,cache-scan-results,labels,analyzer,evaluator,advisor,reporter,upload-results"

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: ort
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0

      - name: Set BUILD_DATE
        run: echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

      - name: Log in to the Container registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=schedule,priority=400
            type=ref,event=branch,priority=600
            type=ref,event=pr,priority=500
            type=semver,pattern={{version}},priority=700
            type=semver,pattern={{major}}.{{minor}},priority=900
            type=semver,pattern={{major}},priority=800
            type=sha,priority=1000
          labels: |
            vcs-ref=${{env.GITHUB_SHA}}
            build-date=${{env.BUILD_DATE}}
            org.opencontainers.image.created=${{env.BUILD_DATE}}
            release=${{env.BUILD_DATE}}
            version=${{env.GITHUB_REF_NAME}}
            org.opencontainers.image.version=${{env.GITHUB_REF_NAME}}
            org.opencontainers.image.url=${{env.REPOSITORY_URL}}
            org.opencontainers.image.source=${{env.REPOSITORY_URL}}
            org.opencontainers.image.documentation=${{env.REPOSITORY_URL}}
            help=${{env.REPOSITORY_URL}}
            url=${{env.REPOSITORY_URL}}
            name=${{env.IMAGE_NAME}}

      - name: Extract last tag
        id: tag
        run: |
          IFS=',' read -ra TAGS <<< "${{ steps.meta.outputs.tags }}"
          LAST_INDEX=$((${#TAGS[@]} - 1))
          echo "last_tag=${TAGS[LAST_INDEX]}" >> $GITHUB_OUTPUT

      - name: Build Docker image
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
        with:
          push: false
          tags: ${{ steps.tag.outputs.last_tag }}
          labels: ${{ steps.meta.outputs.labels }}
          load: true

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@6e7b7d1fd3e4fef0c5fa8cce1229c54b2c9bd0d8 # 0.32.0
        with:
          image-ref: "${{ steps.tag.outputs.last_tag }}"
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"
        env:
          TRIVY_SKIP_DB_UPDATE: true
          TRIVY_SKIP_JAVA_DB_UPDATE: true

      - name: Push Docker image
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@2fdd5c3ebb4e540834e86ecc1f6fdcd5539023ee # v3.0.2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: "${{ steps.tag.outputs.last_tag }}"